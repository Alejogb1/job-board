// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model CompanyImage {
  id            Int @id @default(autoincrement())
  company       Company @relation(fields: [company_id], references: [id])
  company_id    Int @unique  
  company_logo  String
}

model CompanyTeams {
  id          Int @id @default(autoincrement())
  company     Company? @relation(fields: [company_id], references: [id])
  company_id  Int @unique  
  title       String
}  

model CompanyLinks {
  id           Int @id @default(autoincrement())
  company     Company? @relation(fields: [company_id], references: [id])
  company_id  Int @unique  
  url         String
}

model Company {
  id                  Int @id @default(autoincrement())
  jobs                JobPost[]
  company_teams       CompanyTeams[]
  company_image       CompanyImage?
  company_name        String
  profile_description String?
  location            String
  company_webiste_url String
  company_links       CompanyLinks[]
  created_at          DateTime
}

model JobPost {
  id               Int @id @default(autoincrement())
  job_post_url     String 
  slug             String
  job_title        String
  job_body         Bytes
  company          Company @relation(fields: [company_code], references: [id])
  company_code     Int
  region           String
  tags             TagsOnPosts[]
  min_salary       Int
  max_salary       Int
  is_active        Boolean
  is_remote        Boolean
  is_sponsored     Boolean
}

model Users {
  userId     Int      @id @default(autoincrement())
  username   String   @unique
  email      String   @unique
  created_at DateTime
}

model Tag {
  id    Int       @id @default(autoincrement())
  job_post TagsOnPosts[]
  tag_type String
  created_at DateTime
  title String 
}

model TagsOnPosts {
  post       JobPost     @relation(fields: [postId], references: [id])
  postId     Int // relation scalar field (used in the `@relation` attribute above)
  tag   Tag @relation(fields: [tagId], references: [id])
  tagId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([postId, tagId]) 
}
